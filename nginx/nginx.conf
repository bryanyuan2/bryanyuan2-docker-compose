worker_processes 4;

events {
	worker_connections 1024;
}

http {

	# api
	upstream node-app {
	      least_conn;
	      server api:8080 weight=10 max_fails=3 fail_timeout=30s;
	}

	# elasticsearch
	upstream elasticsearch {
		server 127.0.0.1:9200;
		keepalive 15;
	}

	# api
	server {
	    listen 8080;
	    location / {
	    	proxy_pass http://node-app;
	        proxy_http_version 1.1;
	        proxy_set_header Upgrade $http_upgrade;
	        proxy_set_header Connection 'upgrade';
	        proxy_set_header Host $host;
	        proxy_cache_bypass $http_upgrade;
	    }
	}

	# elasticsearch
	server {
	    listen 9200;

	    location / {
	    	proxy_pass http://elasticsearch;
	      	proxy_http_version 1.1;
	      	proxy_set_header Connection "Keep-Alive";
	      	proxy_set_header Proxy-Connection "Keep-Alive";

	      	proxy_redirect off;
	        proxy_set_header X-Real-IP $remote_addr;
	        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	        proxy_set_header Host $http_host;

		    # For CORS Ajax
		    proxy_pass_header Access-Control-Allow-Origin;
		    proxy_pass_header Access-Control-Allow-Methods;
		    proxy_hide_header Access-Control-Allow-Headers;
		    add_header Access-Control-Allow-Headers 'X-Requested-With, Content-Type';
		    add_header Access-Control-Allow-Credentials true;

		    # auth
	      	auth_basic            "Restricted";
	  		auth_basic_user_file  /etc/nginx/.htpasswd;

	    }

	  }
}
